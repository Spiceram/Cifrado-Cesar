///////CIFRADO POLYBIUS
#include<iostream>
#include <string>

using namespace std;

class c_Polybius
{
  public:

  string alf,base;
  int len_base;

  c_Polybius();

  string cifrar(string message);
  string descifrar(string cypher_message);
};

c_Polybius::c_Polybius()
{
  alf = "ABCDEFGHIKLMNOPQRSTUVWXYZ";

  base = "ABCDE";
  
  len_base = base.length();
}

string c_Polybius::cifrar(string message)
{
  int f1, f2, f3;

  string cypher_message; 

  for(int i=0; i<message.length() ;i++)
  {
    f1 = alf.find (message[i]);
    f2 = f1 % len_base;
    f3 = f1 / len_base;
    cypher_message = cypher_message + base[f3];
    cypher_message = cypher_message + base[f2];
  }
  return cypher_message;
}


string c_Polybius::descifrar(string cypher_message)
{
  int e1,e2;

  string decypher;
  
  for(int i=0;i<cypher_message.length();i=i+2)
  {
    e1 = base.find (cypher_message [i]);
    e2 = base.find (cypher_message [i+1]);
    decypher += alf[e1*len_base+e2];
  }
  return decypher;
}


int main()
{
  cout<<"Favor de activar el Bloc Mayus\n=============================="<<endl;

  c_Polybius polybios;

  string cypher_mss,decypher;

  string a;

  getline (cin,a);

  cypher_mss = polybios.cifrar(a);

  decypher = polybios.descifrar(cypher_mss);

  cout << "\nMensaje cifrado\n"<<cypher_mss << "\n==============================\n\n";

  cout << "Mensaje descifrado\n"<<decypher << "\n==============================";
}

//THE GAME
